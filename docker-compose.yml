version: '3.4'

networks:
  laravel:

volumes:
  db_data:

services:

  nginx:
    platform: linux/x86_64 # Mac M1 Support
    image: aimiliosgb/master:nginx
    restart: unless-stopped
    ports:
      - "${DOCKER_HOST_HTTP_PORT}:80"
      - "${DOCKER_HOST_HTTPS_PORT}:443"
    volumes:
      - ./:/var/www/html
    environment:
      PROXY_PROTOCOL_ENABLED: false
    depends_on:
      - php
      - mysql
    networks:
      - laravel
    extra_hosts:
      - "ssh-server:127.0.0.1" # So nginx upstream requirements are met and nginx starts without crashing

  mysql:
    platform: linux/x86_64 # Mac M1 Support
    image: aimiliosgb/master:mysql-8.0
    restart: unless-stopped
    tty: true # interact with mysql terminal
    ports:
      - '${DOCKER_HOST_DB_PORT}:3306'
    volumes:
      - db_data:/var/lib/mysql:delegated
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: '%'
      #SERVICE_TAGS: dev
      #SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    platform: linux/x86_64 # Mac M1 Support
    image: aimiliosgb/master:php-8.1-xdebug
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
    depends_on:
      - mysql
    networks:
      - laravel

  composer:
    platform: linux/x86_64 # Mac M1 Support
    image: aimiliosgb/master:php-8.1
    profiles:
      - cmd-on-demand
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['/var/www/html/composer.phar']
    networks:
      - laravel

  artisan:
    platform: linux/x86_64 # Mac M1 Support
    image: aimiliosgb/master:php-8.1
    profiles:
      - cmd-on-demand
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['/var/www/html/artisan']
    depends_on:
      - mysql
    networks:
      - laravel

  npm:
    image: node:18
    profiles:
      - cmd-on-demand
    ports:
      - '5173:5173'
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

#  cron:
#    build:
#      context: .
#      dockerfile: ./docker/dockerfile-php
#      target: cron_service
#    #container_name: cron
#    restart: unless-stopped
#    volumes:
#      - ./:/var/www/html
#    depends_on:
#      - mysql
#    networks:
#      - laravel

#  logzio:
#    build:
#      context: .
#      dockerfile: ./docker/dockerfile-logzio
#      args:
#        LOGZIO_ENV: ${LOGZIO_ENV:-dev}
#        LOGZIO_TOKEN: ${LOGZIO_TOKEN:-token}
#    restart: unless-stopped
#    volumes:
#      - ./docker/log/nginx:/log
